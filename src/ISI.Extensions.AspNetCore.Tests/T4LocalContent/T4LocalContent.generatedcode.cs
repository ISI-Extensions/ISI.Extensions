// <auto-generated />
// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;

#region ISI.Extensions.AspNetCore.Tests.T4Files
namespace ISI.Extensions.AspNetCore.Tests
{
	[GeneratedCode("T4LocalContent", "1.0"), DebuggerNonUserCode]
	public static partial class T4Files
	{
		public static string __root = "~/";
		public static string _root()
		{
			return (__root ??= ISI.Extensions.FileProviders.EmbeddedVolumesFileProvider.GetPathPrefix(typeof(T4Files)));
		}
	
		[GeneratedCode("T4LocalContent", "1.0"), DebuggerNonUserCode]
		public static partial class Areas
		{
			public static string _root()
			{
				return string.Format("{0}Areas/", T4Files._root());
			}
		
			[GeneratedCode("T4LocalContent", "1.0"), DebuggerNonUserCode]
			public static partial class Pizza
			{
				public static string _root()
				{
					return string.Format("{0}Pizza/", T4Files.Areas._root());
				}
			
			}
		}
		[GeneratedCode("T4LocalContent", "1.0"), DebuggerNonUserCode]
		public static partial class Views
		{
			public static string _root()
			{
				return string.Format("{0}Views/", T4Files._root());
			}
		
		}
	}
}
#endregion

#region ISI.Extensions.AspNetCore.Tests.T4Links
namespace ISI.Extensions.AspNetCore.Tests
{
	[GeneratedCode("T4LocalContent", "1.0"), DebuggerNonUserCode]
	public static partial class T4Links
	{
		private static Func<string, bool, global::ISI.Extensions.AspNetCore.IContentUrl> _getContentUrl = null;
		public static Func<string, bool, global::ISI.Extensions.AspNetCore.IContentUrl> GetContentUrl 
		{
			get => _getContentUrl ??= (url, isOriginalUrl) => new global::ISI.Extensions.AspNetCore.ContentUrl(url, isOriginalUrl);
			set => _getContentUrl = value;
		}
	
		[ISI.Extensions.AspNetCore.ContentUrlGeneratorSetter]
		public class ContentUrlGeneratorSetter : global::ISI.Extensions.AspNetCore.IContentUrlGeneratorSetter
		{
			public void SetContentUrlGenerator(Func<string, bool, global::ISI.Extensions.AspNetCore.IContentUrl> setter)
			{
				GetContentUrl = setter;
			}
		}
	
		public static string __root = "~/";
		public static string _root()
		{
			return (__root ??= ISI.Extensions.FileProviders.EmbeddedVolumesFileProvider.GetPathPrefix(typeof(T4Links)));
		}
	
		[GeneratedCode("T4LocalContent", "1.0"), DebuggerNonUserCode]
		public static partial class Areas
		{
			public static string _root()
			{
				return string.Format("{0}Areas/", T4Links._root());
			}
		
			[GeneratedCode("T4LocalContent", "1.0"), DebuggerNonUserCode]
			public static partial class Pizza
			{
				public static string _root()
				{
					return string.Format("{0}Pizza/", T4Links.Areas._root());
				}
			
			}
		}
	}
}
#endregion

